{"ast":null,"code":"import React, { createElement, memo } from 'react';\nimport clsx from 'clsx';\n\nfunction FilterRow({\n  columns,\n  filters,\n  onFiltersChange\n}) {\n  function onChange(key, value) {\n    const newFilters = { ...filters\n    };\n    newFilters[key] = value;\n    onFiltersChange === null || onFiltersChange === void 0 ? void 0 : onFiltersChange(newFilters);\n  }\n\n  return React.createElement(\"div\", {\n    role: \"row\",\n    \"aria-rowindex\": 2,\n    className: \"rdg-filter-row\"\n  }, columns.map(column => {\n    const {\n      key\n    } = column;\n    const className = clsx('rdg-cell', {\n      'rdg-cell-frozen': column.frozen,\n      'rdg-cell-frozen-last': column.isLastFrozenColumn\n    });\n    const style = {\n      width: column.width,\n      left: column.left\n    };\n    return React.createElement(\"div\", {\n      key: key,\n      style: style,\n      className: className\n    }, column.filterRenderer && createElement(column.filterRenderer, {\n      column,\n      value: filters === null || filters === void 0 ? void 0 : filters[column.key],\n      onChange: value => onChange(key, value)\n    }));\n  }));\n}\n\nexport default memo(FilterRow);","map":null,"metadata":{},"sourceType":"module"}