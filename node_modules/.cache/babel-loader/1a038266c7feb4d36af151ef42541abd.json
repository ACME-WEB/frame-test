{"ast":null,"code":"import React, { useCallback, memo } from 'react';\nimport HeaderCell from './HeaderCell';\nimport { assertIsValidKey } from './utils';\n\nfunction HeaderRow({\n  columns,\n  rows,\n  rowKey,\n  onSelectedRowsChange,\n  allRowsSelected,\n  onColumnResize,\n  sortColumn,\n  sortDirection,\n  onSort\n}) {\n  const handleAllRowsSelectionChange = useCallback(checked => {\n    if (!onSelectedRowsChange) return;\n    assertIsValidKey(rowKey);\n    const newSelectedRows = new Set();\n\n    if (checked) {\n      for (const row of rows) {\n        newSelectedRows.add(row[rowKey]);\n      }\n    }\n\n    onSelectedRowsChange(newSelectedRows);\n  }, [onSelectedRowsChange, rows, rowKey]);\n  return React.createElement(\"div\", {\n    role: \"row\",\n    \"aria-rowindex\": 1,\n    className: \"rdg-header-row\"\n  }, columns.map(column => {\n    return React.createElement(HeaderCell, {\n      key: column.key,\n      column: column,\n      onResize: onColumnResize,\n      allRowsSelected: allRowsSelected,\n      onAllRowsSelectionChange: handleAllRowsSelectionChange,\n      onSort: onSort,\n      sortColumn: sortColumn,\n      sortDirection: sortDirection\n    });\n  }));\n}\n\nexport default memo(HeaderRow);","map":null,"metadata":{},"sourceType":"module"}