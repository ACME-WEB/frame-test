{"ast":null,"code":"import React, { memo, forwardRef } from 'react';\nimport clsx from 'clsx';\nimport Cell from './Cell';\nimport EditCell from './EditCell';\nimport { wrapEvent } from './utils';\n\nfunction Row({\n  cellRenderer: CellRenderer = Cell,\n  className,\n  eventBus,\n  rowIdx,\n  isRowSelected,\n  copiedCellIdx,\n  draggedOverCellIdx,\n  row,\n  viewportColumns,\n  selectedCellProps,\n  onRowClick,\n  rowClass,\n  setDraggedOverRowIdx,\n  onMouseEnter,\n  top,\n  'aria-rowindex': ariaRowIndex,\n  'aria-selected': ariaSelected,\n  ...props\n}, ref) {\n  function handleDragEnter() {\n    setDraggedOverRowIdx === null || setDraggedOverRowIdx === void 0 ? void 0 : setDraggedOverRowIdx(rowIdx);\n  }\n\n  className = clsx('rdg-row', `rdg-row-${rowIdx % 2 === 0 ? 'even' : 'odd'}`, {\n    'rdg-row-selected': isRowSelected,\n    'rdg-group-row-selected': (selectedCellProps === null || selectedCellProps === void 0 ? void 0 : selectedCellProps.idx) === -1\n  }, rowClass === null || rowClass === void 0 ? void 0 : rowClass(row), className);\n  return React.createElement(\"div\", Object.assign({\n    role: \"row\",\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": ariaSelected,\n    ref: ref,\n    className: className,\n    onMouseEnter: wrapEvent(handleDragEnter, onMouseEnter),\n    style: {\n      top\n    }\n  }, props), viewportColumns.map(column => {\n    const isCellSelected = (selectedCellProps === null || selectedCellProps === void 0 ? void 0 : selectedCellProps.idx) === column.idx;\n\n    if ((selectedCellProps === null || selectedCellProps === void 0 ? void 0 : selectedCellProps.mode) === 'EDIT' && isCellSelected) {\n      return React.createElement(EditCell, {\n        key: column.key,\n        rowIdx: rowIdx,\n        column: column,\n        row: row,\n        onKeyDown: selectedCellProps.onKeyDown,\n        editorPortalTarget: selectedCellProps.editorPortalTarget,\n        editorContainerProps: selectedCellProps.editorContainerProps,\n        editor2Props: selectedCellProps.editor2Props\n      });\n    }\n\n    return React.createElement(CellRenderer, {\n      key: column.key,\n      rowIdx: rowIdx,\n      column: column,\n      row: row,\n      isCopied: copiedCellIdx === column.idx,\n      isDraggedOver: draggedOverCellIdx === column.idx,\n      isCellSelected: isCellSelected,\n      isRowSelected: isRowSelected,\n      eventBus: eventBus,\n      dragHandleProps: isCellSelected ? selectedCellProps.dragHandleProps : undefined,\n      onFocus: isCellSelected ? selectedCellProps.onFocus : undefined,\n      onKeyDown: isCellSelected ? selectedCellProps.onKeyDown : undefined,\n      onRowClick: onRowClick\n    });\n  }));\n}\n\nexport default memo(forwardRef(Row));","map":null,"metadata":{},"sourceType":"module"}