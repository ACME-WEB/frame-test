{"ast":null,"code":"import { canEdit } from './columnUtils';\nexport function isSelectedCellEditable({\n  selectedPosition,\n  columns,\n  rows,\n  onCheckCellIsEditable,\n  isGroupRow\n}) {\n  const column = columns[selectedPosition.idx];\n  const row = rows[selectedPosition.rowIdx];\n  if (column.rowGroup === true || isGroupRow(row)) return false;\n  const isCellEditable = onCheckCellIsEditable ? onCheckCellIsEditable({\n    row,\n    column,\n    ...selectedPosition\n  }) : true;\n  return isCellEditable && canEdit(column, row);\n}\nexport function getNextSelectedCellPosition({\n  cellNavigationMode,\n  columns,\n  rowsCount,\n  nextPosition\n}) {\n  if (cellNavigationMode !== 'NONE') {\n    const {\n      idx,\n      rowIdx\n    } = nextPosition;\n    const columnsCount = columns.length;\n    const isAfterLastColumn = idx === columnsCount;\n    const isBeforeFirstColumn = idx === -1;\n\n    if (isAfterLastColumn) {\n      if (cellNavigationMode === 'CHANGE_ROW') {\n        const isLastRow = rowIdx === rowsCount - 1;\n\n        if (!isLastRow) {\n          return {\n            idx: 0,\n            rowIdx: rowIdx + 1\n          };\n        }\n      } else if (cellNavigationMode === 'LOOP_OVER_ROW') {\n        return {\n          rowIdx,\n          idx: 0\n        };\n      }\n    } else if (isBeforeFirstColumn) {\n      if (cellNavigationMode === 'CHANGE_ROW') {\n        const isFirstRow = rowIdx === 0;\n\n        if (!isFirstRow) {\n          return {\n            rowIdx: rowIdx - 1,\n            idx: columnsCount - 1\n          };\n        }\n      } else if (cellNavigationMode === 'LOOP_OVER_ROW') {\n        return {\n          rowIdx,\n          idx: columnsCount - 1\n        };\n      }\n    }\n  }\n\n  return nextPosition;\n}\nexport function canExitGrid({\n  cellNavigationMode,\n  columns,\n  rowsCount,\n  selectedPosition: {\n    rowIdx,\n    idx\n  },\n  shiftKey\n}) {\n  // When the cellNavigationMode is 'none' or 'changeRow', you can exit the grid if you're at the first or last cell of the grid\n  // When the cellNavigationMode is 'loopOverRow', there is no logical exit point so you can't exit the grid\n  if (cellNavigationMode === 'NONE' || cellNavigationMode === 'CHANGE_ROW') {\n    const atLastCellInRow = idx === columns.length - 1;\n    const atFirstCellInRow = idx === 0;\n    const atLastRow = rowIdx === rowsCount - 1;\n    const atFirstRow = rowIdx === 0;\n    return shiftKey ? atFirstCellInRow && atFirstRow : atLastCellInRow && atLastRow;\n  }\n\n  return false;\n}","map":null,"metadata":{},"sourceType":"module"}