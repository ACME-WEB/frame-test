{"ast":null,"code":"var _jsxFileName = \"/Users/eunkang/Downloads/frame/React/src/components/sections/FeepageConfirmResult.js\";\n// 수수료조회 페이지 (3) => 시료명\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n/* style */\n\nimport ReactDataGrid from \"react-data-grid\";\nimport \"react-data-grid/dist/react-data-grid.css\";\n\nfunction FeePageConfirmResult({\n  areaId\n}) {\n  const columns = [{\n    key: \"field\",\n    name: \"시험분류명\",\n    width: 150\n  }, {\n    key: \"title\",\n    name: \"시험품목명\"\n  }];\n  const [DBContent, setDBContent] = useState([]);\n  useEffect(() => {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"http://kcm.kqc.kr/api/?act=item\";\n    fetch(proxyurl + url).then(response => response.json()).then(contents => {\n      setDBContent(contents);\n    }).catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser?\"));\n  }, []);\n\n  const groupList = group => {\n    const dataList = [];\n    DBContent.map(db => {\n      if (db.cate1 === areaId) {\n        dataList.push({\n          field: areaId,\n          title: /*#__PURE__*/React.createElement(Link, {\n            to: `/수수료조회/${areaId}/${db.cate2}/${db.seq}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 7\n            }\n          }, db.cate2)\n        });\n      }\n    });\n    return dataList;\n  };\n\n  return /*#__PURE__*/React.createElement(ReactDataGrid, {\n    columns: columns,\n    rows: groupList(DBContent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  });\n}\n\nexport default FeePageConfirmResult;","map":{"version":3,"sources":["/Users/eunkang/Downloads/frame/React/src/components/sections/FeepageConfirmResult.js"],"names":["React","useState","useEffect","Link","ReactDataGrid","FeePageConfirmResult","areaId","columns","key","name","width","DBContent","setDBContent","proxyurl","url","fetch","then","response","json","contents","catch","console","log","groupList","group","dataList","map","db","cate1","push","field","title","cate2","seq"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,0CAAP;;AAEA,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AACzC,QAAMC,OAAO,GAAG,CACf;AAAEC,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,IAAI,EAAE,OAAtB;AAA+BC,IAAAA,KAAK,EAAE;AAAtC,GADe,EAEf;AAAEF,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GAFe,CAAhB;AAKA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,QAAQ,GAAG,sCAAjB;AACA,UAAMC,GAAG,GAAG,iCAAZ;AACAC,IAAAA,KAAK,CAACF,QAAQ,GAAGC,GAAZ,CAAL,CACEE,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EAEEF,IAFF,CAEQG,QAAD,IAAc;AACnBP,MAAAA,YAAY,CAACO,QAAD,CAAZ;AACA,KAJF,EAKEC,KALF,CAKQ,MACNC,OAAO,CAACC,GAAR,CAAY,kBAAkBR,GAAlB,GAAwB,gCAApC,CANF;AAQA,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMS,SAAS,GAAIC,KAAD,IAAW;AAC5B,UAAMC,QAAQ,GAAG,EAAjB;AACAd,IAAAA,SAAS,CAACe,GAAV,CAAeC,EAAD,IAAQ;AACrB,UAAIA,EAAE,CAACC,KAAH,KAAatB,MAAjB,EAAyB;AACxBmB,QAAAA,QAAQ,CAACI,IAAT,CAAc;AACbC,UAAAA,KAAK,EAAExB,MADM;AAEbyB,UAAAA,KAAK,eACJ,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASzB,MAAO,IAAGqB,EAAE,CAACK,KAAM,IAAGL,EAAE,CAACM,GAAI,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACEN,EAAE,CAACK,KADL;AAHY,SAAd;AAQA;AACD,KAXD;AAaA,WAAOP,QAAP;AACA,GAhBD;;AAkBA,sBACC,oBAAC,aAAD;AACC,IAAA,OAAO,EAAElB,OADV;AAEC,IAAA,IAAI,EAAEgB,SAAS,CAACZ,SAAD,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAMA;;AACD,eAAeN,oBAAf","sourcesContent":["// 수수료조회 페이지 (3) => 시료명\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/* style */\nimport ReactDataGrid from \"react-data-grid\";\nimport \"react-data-grid/dist/react-data-grid.css\";\n\nfunction FeePageConfirmResult({ areaId }) {\n\tconst columns = [\n\t\t{ key: \"field\", name: \"시험분류명\", width: 150 },\n\t\t{ key: \"title\", name: \"시험품목명\" },\n\t];\n\n\tconst [DBContent, setDBContent] = useState([]);\n\tuseEffect(() => {\n\t\tconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\t\tconst url = \"http://kcm.kqc.kr/api/?act=item\";\n\t\tfetch(proxyurl + url)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((contents) => {\n\t\t\t\tsetDBContent(contents);\n\t\t\t})\n\t\t\t.catch(() =>\n\t\t\t\tconsole.log(\"Can’t access \" + url + \" response. Blocked by browser?\"),\n\t\t\t);\n\t}, []);\n\n\tconst groupList = (group) => {\n\t\tconst dataList = [];\n\t\tDBContent.map((db) => {\n\t\t\tif (db.cate1 === areaId) {\n\t\t\t\tdataList.push({\n\t\t\t\t\tfield: areaId,\n\t\t\t\t\ttitle: (\n\t\t\t\t\t\t<Link to={`/수수료조회/${areaId}/${db.cate2}/${db.seq}`}>\n\t\t\t\t\t\t\t{db.cate2}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn dataList;\n\t};\n\n\treturn (\n\t\t<ReactDataGrid\n\t\t\tcolumns={columns}\n\t\t\trows={groupList(DBContent)}\n\t\t></ReactDataGrid>\n\t);\n}\nexport default FeePageConfirmResult;\n"]},"metadata":{},"sourceType":"module"}